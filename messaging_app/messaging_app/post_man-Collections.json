{
  "info": {
    "name": "Messaging App API Tests",
    "description": "Collection for testing messaging app endpoints including authentication, conversations, and messages",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"testpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "User Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('auth_token', pm.response.json().access_token);",
                  "    pm.environment.set('user_id', pm.response.json().user_id);",
                  "    console.log('Token set:', pm.environment.get('auth_token'));",
                  "}",
                  "",
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.have.property('access_token');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Conversations",
      "item": [
        {
          "name": "Create Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Conversation\",\n  \"participants\": [\"user2\", \"user3\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/conversations",
              "host": ["{{base_url}}"],
              "path": ["conversations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('conversation_id', pm.response.json().id);",
                  "}",
                  "",
                  "pm.test('Conversation created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json()).to.have.property('id');",
                  "    pm.expect(pm.response.json()).to.have.property('title');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get User Conversations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/conversations",
              "host": ["{{base_url}}"],
              "path": ["conversations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get conversations successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Specific Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/conversations/{{conversation_id}}",
              "host": ["{{base_url}}"],
              "path": ["conversations", "{{conversation_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get specific conversation successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.have.property('id');",
                  "    pm.expect(pm.response.json()).to.have.property('title');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Hello, this is a test message!\",\n  \"conversation_id\": \"{{conversation_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/messages",
              "host": ["{{base_url}}"],
              "path": ["messages"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('message_id', pm.response.json().id);",
                  "}",
                  "",
                  "pm.test('Message sent successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json()).to.have.property('id');",
                  "    pm.expect(pm.response.json()).to.have.property('content');",
                  "    pm.expect(pm.response.json().content).to.equal('Hello, this is a test message!');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Messages from Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/conversations/{{conversation_id}}/messages",
              "host": ["{{base_url}}"],
              "path": ["conversations", "{{conversation_id}}", "messages"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get messages successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "    pm.expect(pm.response.json()[0]).to.have.property('content');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Update Message",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Updated message content!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/messages/{{message_id}}",
              "host": ["{{base_url}}"],
              "path": ["messages", "{{message_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Message updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.have.property('content');",
                  "    pm.expect(pm.response.json().content).to.equal('Updated message content!');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Delete Message",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/messages/{{message_id}}",
              "host": ["{{base_url}}"],
              "path": ["messages", "{{message_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Message deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Authorization Tests",
      "item": [
        {
          "name": "Access Protected Route Without Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/conversations",
              "host": ["{{base_url}}"],
              "path": ["conversations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Unauthorized access blocked', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Access Protected Route With Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_here"
              }
            ],
            "url": {
              "raw": "{{base_url}}/conversations",
              "host": ["{{base_url}}"],
              "path": ["conversations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid token rejected', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "message_id",
      "value": "",
      "type": "string"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('Running test collection for messaging app');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('Test completed with status:', pm.response.code);"
        ]
      }
    }
  ]
}
